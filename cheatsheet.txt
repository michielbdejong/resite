# run resite and restore:
docker run -d --volumes-from michiel-data -p 443:443 resite
docker run -d --volumes-from michiel-data -p 80:80 resite
docker run -d --volumes-from michiel-data -p 7678:7678 resite
docker run -d --volumes-from michiel-data -p 8000:8000 restore
docker run -d --volumes-from michiel-data -p 10550:10550 sockethub
docker run -d --volumes-from michiel-data -p 2001:80 niktrix/docker-pump.io
docker ps

# run an image interactively (don't forget the -t to assign a tty):
docker run -i -t --volumes-from michiel-data sockethub /bin/bash

# if one of them crashed during startup, check:
docker ps -a
docker logs resite-instance

# to edit it, add an ssh server to it, by adding these lines to its Dockerfile:
RUN apt-get install -y openssh-server
RUN mkdir /var/run/sshd
RUN echo 'root:screencast' |chpasswd

EXPOSE 22
CMD    ["/usr/sbin/sshd", "-D"]

#then build it and find out its local port (don't run this with -P!):
docker build --rm -t eg_sshd .
docker run -d -P --name test_sshd eg_sshd
docker port test_sshd 22
ssh root@192.168.1.2 -p 49154 #may take a while to check the host identity

# or use:
docker run -d -v /root/restore:/restore -P --name resite-instance-with-ssh resite-with-ssh

# and to clean it up again:
docker stop test_sshd
docker rm test_sshd
docker rmi eg_sshd

# copy data into data volume:
docker run -v /root/restore:/restore --volumes-from michiel-data busybox cp -r /restore /data/
docker run --volumes-from michiel-data busybox ls -al /data
